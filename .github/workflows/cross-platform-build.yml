name: AddressSanitizer Leak Test

on: [push, pull_request]

jobs:
  asan-gcc-ubuntu:
    name: GCC (Ubuntu)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake g++ clang

      - name: Configure and Build with GCC
        run: |
          cmake -S . -B build \
            -DCMAKE_C_COMPILER=gcc \
            -DCMAKE_CXX_COMPILER=g++ \
            -DCMAKE_CXX_FLAGS="-fsanitize=address -g -O1" \
            -DCMAKE_BUILD_TYPE=Debug
          cmake --build build

      - name: Run and Capture ASan Output
        run: |
          export ASAN_OPTIONS="detect_leaks=1:abort_on_error=0:leak_check_at_exit=1:verbosity=1"
          ./build/memory_leak 2> asan_output.txt || true
          echo "===== AddressSanitizer Output (GCC) ====="
          cat asan_output.txt
          grep -q "ERROR: LeakSanitizer" asan_output.txt && exit 0
          echo "No memory leaks detected — test failed."
          exit 1

  asan-clang-ubuntu:
    name: Clang (Ubuntu)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake clang

      - name: Configure and Build with Clang
        run: |
          cmake -S . -B build \
            -DCMAKE_C_COMPILER=clang \
            -DCMAKE_CXX_COMPILER=clang++ \
            -DCMAKE_CXX_FLAGS="-fsanitize=address -g -O1" \
            -DCMAKE_BUILD_TYPE=Debug
          cmake --build build

      - name: Run and Capture ASan Output
        run: |
          ./build/memory_leak 2> asan_output.txt || true
          echo "===== AddressSanitizer Output (Clang) ====="
          cat asan_output.txt
          grep -q "ERROR: LeakSanitizer" asan_output.txt && exit 0
          echo "No memory leaks detected — test failed."
          exit 1
